# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    defaults:
      run:
        shell: bash
      
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '16'
          cache: 'maven'

      - name: Create .env
        uses: fmunirdev/envvar-to-dotenv-action@v0.1.0
        env:
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }},
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }},
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }},
          DATABASE_USER: ${{ secrets.DATABASE_USER }},
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }},
          JWT_SECRET: ${{ secrets.JWT_SECRET }},
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }},
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        with:
          variableNames: DATABASE_HOST,DATABASE_NAME,DATABASE_PORT,DATABASE_USER,DATABASE_PASSWORD,JWT_SECRET,JWT_EXPIRATION,ADMIN_EMAIL,ADMIN_PASSWORD

      - name: Build
        run: mvn -B package -Dmaven.test.skip=true

      - name: Deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASS }}
          source: "./target/cubanmusic-api.jar,./.env"
          #strip_components: 2
          target: "cubanmusic-api"
          rm: true

      - name: Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASS }}
          # script: cd cubanmusic && sh restart.sh && exit
          script: |
            cd cubanmusic-api
            kill -9 $(cat ../cubamusic.pid)
            nohup java -jar ./target/cubanmusic-api.jar > ./log.txt 2>&1 &
            echo $! > ../cubamusic.pid
            exit

